wm (vltava$spe, vltava$ell)
wm (vltava$spe, vltava$traits)
wm (vltava$herbs$spe, vltava$herbs$traits)
hist (wm (vltava$herbs$spe, vltava$herbs$traits))
vltava$herbs$traits
d <- read.delim ('clipboard')
hist (d)
summary (d)
d <- read.delim ('clipboard')
hist (d)
d
summary (d)
hist (d)
hist (d[,1])
hist (log (d[,1]))
hist ((d[,1]), log = 'x')
?hist
hist (log(d[,1]))
# Create example dataset for weimea using Ellenberg values from Ellenberg values paper (Zeleny Schaffers)
#setwd ('c:\\Users\\Zeleny\\Dropbox\\CLANKY\\Ellenberg values\\data-example\\')
#vltava.spe <- read.csv ('vltava-spe.csv', row.names = 1)
#vltava.ell <- read.csv ('vltava-spec.eiv.csv', row.names = 1)
#vltava.env <- read.delim ('vltava-herbs-envdata.txt', row.names = 1)
#setwd ('c:\\Users\\Zeleny\\Dropbox\\experimenty\\R libraries\\weimea\\pkg\\data\\')
#save (vltava.spe, file = 'vltava.spe.rda')
#save (vltava.ell, file = 'vltava.ell.rda')
#save (vltava.env, file = 'vltava.env.rda')
setwd ('c:\\Users\\Zeleny\\Dropbox\\experimenty\\R libraries\\weimea\\data\\')
vltava.spe <- read.delim ('vltava-spe.txt', row.names = 1, check.names = F)
vltava.herbs.spe <- read.delim ('vltava-herbs-spe.txt', row.names = 1, check.names = F)
vltava.herbs.ell <- read.delim ('vltava-herbs-ell.txt', row.names = 1)
vltava.herbs.traits <- read.delim ('vltava-herbs-traits.txt', row.names = 1)
vltava.herbs.spnames <- read.delim ('vltava-herbs-spnames.txt', row.names = 1)
vltava.env <- read.delim ('vltava-env.txt', row.names = 1)
#vltava.group <- read.delim ('vltava-group.txt', row.names = 1)
#vltava.transect <- read.delim ('vltava-transect.txt', row.names = 1)
vltava.ell <- read.delim ('vltava-ell.txt', row.names = 1)
vltava.spnames <- read.delim ('vltava-spnames.txt', row.names = 1, check.names = F)
vltava.all.spe <- read.delim ('vltava-all-spe.txt', row.names = 1, check.names = F)
vltava.all.spnames <- read.delim ('vltava-all-spnames.txt', row.names = 1)
#GROUP <- cutree (hclust (dist (log1p (vltava.spe)), 'ward'), k = 4)
#write.table (file = 'group.txt', GROUP, sep = '\t')
vltava <- list (spe = vltava.spe, ell = vltava.ell, env = vltava.env, spnames = vltava.spnames, herbs = list (spe = vltava.herbs.spe, ell = vltava.herbs.ell, traits = vltava.herbs.traits, spnames = vltava.herbs.spnames), all = list (spe = vltava.all.spe, spnames = vltava.all.spnames))
setwd ('c:\\Users\\Zeleny\\Dropbox\\experimenty\\R libraries\\weimea\\pkg\\data\\')
save (vltava, file = 'vltava.rda')
library(weimea)
data (vltava)
wm (vltava$spe, vltava$ell)
mopet (wm (vltava$spe, vltava$ell[,1]), vltava$env[,3])
mopet (wm (vltava$spe, vltava$ell[,1]), vltava$env[,3:4])
mopet (wm (vltava$spe, vltava$ell[,1:3]), vltava$env[,3])
d <- read.delim ('clip')
d <- read.delim ('clipboard')
hist (d[,1])
d <- read.delim ('clipboard')
d
plot (d)
plot (d[.-86])
plot (d[,-86])
plot (d[-86,])
# Create example dataset for weimea using Ellenberg values from Ellenberg values paper (Zeleny Schaffers)
#setwd ('c:\\Users\\Zeleny\\Dropbox\\CLANKY\\Ellenberg values\\data-example\\')
#vltava.spe <- read.csv ('vltava-spe.csv', row.names = 1)
#vltava.ell <- read.csv ('vltava-spec.eiv.csv', row.names = 1)
#vltava.env <- read.delim ('vltava-herbs-envdata.txt', row.names = 1)
#setwd ('c:\\Users\\Zeleny\\Dropbox\\experimenty\\R libraries\\weimea\\pkg\\data\\')
#save (vltava.spe, file = 'vltava.spe.rda')
#save (vltava.ell, file = 'vltava.ell.rda')
#save (vltava.env, file = 'vltava.env.rda')
setwd ('c:\\Users\\Zeleny\\Dropbox\\experimenty\\R libraries\\weimea\\data\\')
vltava.spe <- read.delim ('vltava-spe.txt', row.names = 1, check.names = F)
vltava.herbs.spe <- read.delim ('vltava-herbs-spe.txt', row.names = 1, check.names = F)
vltava.herbs.ell <- read.delim ('vltava-herbs-ell.txt', row.names = 1)
vltava.herbs.traits <- read.delim ('vltava-herbs-traits.txt', row.names = 1)
vltava.herbs.spnames <- read.delim ('vltava-herbs-spnames.txt', row.names = 1)
vltava.env <- read.delim ('vltava-env.txt', row.names = 1)
#vltava.group <- read.delim ('vltava-group.txt', row.names = 1)
#vltava.transect <- read.delim ('vltava-transect.txt', row.names = 1)
vltava.ell <- read.delim ('vltava-ell.txt', row.names = 1)
vltava.spnames <- read.delim ('vltava-spnames.txt', row.names = 1, check.names = F)
vltava.all.spe <- read.delim ('vltava-all-spe.txt', row.names = 1, check.names = F)
vltava.all.spnames <- read.delim ('vltava-all-spnames.txt', row.names = 1)
#GROUP <- cutree (hclust (dist (log1p (vltava.spe)), 'ward'), k = 4)
#write.table (file = 'group.txt', GROUP, sep = '\t')
vltava <- list (spe = vltava.spe, ell = vltava.ell, env = vltava.env, spnames = vltava.spnames, herbs = list (spe = vltava.herbs.spe, ell = vltava.herbs.ell, traits = vltava.herbs.traits, spnames = vltava.herbs.spnames), all = list (spe = vltava.all.spe, spnames = vltava.all.spnames))
setwd ('c:\\Users\\Zeleny\\Dropbox\\experimenty\\R libraries\\weimea\\pkg\\data\\')
save (vltava, file = 'vltava.rda')
library(weimea)
vltava$env$HEAT
test.LR (vltava$spe, vltava$env$HEAT)
test.LR (wm (vltava$spe, vltava$ell[,1], vltava$env$HEAT)
)
test.LR (wm (vltava$spe, vltava$ell[,1]), vltava$env$HEAT)
vltava$ell
vltava$ell[,1]
test.LR (wm (vltava$spe, vltava$ell[,1]), vltava$env$HEAT)
wm (vltava$spe, vltava$ell$ell)
names (vltava$ell)
wm (vltava$spe, vltava$ell$ell_light)
test.LR (wm (vltava$spe, vltava$ell$ell_light))
test.LR (wm (vltava$spe, vltava$ell$ell_light), env = vltava$env$HEAT-LOAD)
test.LR (wm (vltava$spe, vltava$ell$ell_light), env = vltava$env$HEAT.LOAD)
vltava$env$HEAT
?test.LR
data (vltava)
test.LR (M = wm (vltava$spe, vltava$ell), vltava$env, alpha = 0.05)
data (vltava)
test.LR (M = wm (vltava$spe, vltava$ell), vltava$env, alpha = 0.05)
test.LR (M = wm (vltava$spe, vltava$ell), vltava$env[,2:4], alpha = 0.05)
wm (vltava$spe, vltava$ell)
wm (decostand (vltava$spe, 'pa'), vltava$ell)
vltava.group <- read.delim ('vltava-group.txt')
setwd ('c:\\Users\\Zeleny\\Dropbox\\experimenty\\R libraries\\weimea\\data\\')
vltava.group <- read.delim ('vltava-group.txt')
vltava.group\
vltava.group
# Create example dataset for weimea using Ellenberg values from Ellenberg values paper (Zeleny Schaffers)
#setwd ('c:\\Users\\Zeleny\\Dropbox\\CLANKY\\Ellenberg values\\data-example\\')
#vltava.spe <- read.csv ('vltava-spe.csv', row.names = 1)
#vltava.ell <- read.csv ('vltava-spec.eiv.csv', row.names = 1)
#vltava.env <- read.delim ('vltava-herbs-envdata.txt', row.names = 1)
#setwd ('c:\\Users\\Zeleny\\Dropbox\\experimenty\\R libraries\\weimea\\pkg\\data\\')
#save (vltava.spe, file = 'vltava.spe.rda')
#save (vltava.ell, file = 'vltava.ell.rda')
#save (vltava.env, file = 'vltava.env.rda')
setwd ('c:\\Users\\Zeleny\\Dropbox\\experimenty\\R libraries\\weimea\\data\\')
vltava.spe <- read.delim ('vltava-spe.txt', row.names = 1, check.names = F)
vltava.herbs.spe <- read.delim ('vltava-herbs-spe.txt', row.names = 1, check.names = F)
vltava.herbs.ell <- read.delim ('vltava-herbs-ell.txt', row.names = 1)
vltava.herbs.traits <- read.delim ('vltava-herbs-traits.txt', row.names = 1)
vltava.herbs.spnames <- read.delim ('vltava-herbs-spnames.txt', row.names = 1)
vltava.env <- read.delim ('vltava-env.txt', row.names = 1)
vltava.group <- read.delim ('vltava-group.txt')
#vltava.transect <- read.delim ('vltava-transect.txt', row.names = 1)
vltava.ell <- read.delim ('vltava-ell.txt', row.names = 1)
vltava.spnames <- read.delim ('vltava-spnames.txt', row.names = 1, check.names = F)
vltava.all.spe <- read.delim ('vltava-all-spe.txt', row.names = 1, check.names = F)
vltava.all.spnames <- read.delim ('vltava-all-spnames.txt', row.names = 1)
#GROUP <- cutree (hclust (dist (log1p (vltava.spe)), 'ward'), k = 4)
#write.table (file = 'group.txt', GROUP, sep = '\t')
vltava <- list (spe = vltava.spe, ell = vltava.ell, env = vltava.env, group = vltava.group, spnames = vltava.spnames, herbs = list (spe = vltava.herbs.spe, ell = vltava.herbs.ell, traits = vltava.herbs.traits, spnames = vltava.herbs.spnames), all = list (spe = vltava.all.spe, spnames = vltava.all.spnames))
setwd ('c:\\Users\\Zeleny\\Dropbox\\experimenty\\R libraries\\weimea\\pkg\\data\\')
save (vltava, file = 'vltava.rda')
vltava$spnames
head (vltava$all$spnames)
head (vltava$herbs$spnames)
head (vltava$spnames)
# Create example dataset for weimea using Ellenberg values from Ellenberg values paper (Zeleny Schaffers)
#setwd ('c:\\Users\\Zeleny\\Dropbox\\CLANKY\\Ellenberg values\\data-example\\')
#vltava.spe <- read.csv ('vltava-spe.csv', row.names = 1)
#vltava.ell <- read.csv ('vltava-spec.eiv.csv', row.names = 1)
#vltava.env <- read.delim ('vltava-herbs-envdata.txt', row.names = 1)
#setwd ('c:\\Users\\Zeleny\\Dropbox\\experimenty\\R libraries\\weimea\\pkg\\data\\')
#save (vltava.spe, file = 'vltava.spe.rda')
#save (vltava.ell, file = 'vltava.ell.rda')
#save (vltava.env, file = 'vltava.env.rda')
setwd ('c:\\Users\\Zeleny\\Dropbox\\experimenty\\R libraries\\weimea\\data\\')
vltava.spe <- read.delim ('vltava-spe.txt', row.names = 1, check.names = F)
vltava.herbs.spe <- read.delim ('vltava-herbs-spe.txt', row.names = 1, check.names = F)
vltava.herbs.ell <- read.delim ('vltava-herbs-ell.txt', row.names = 1)
vltava.herbs.traits <- read.delim ('vltava-herbs-traits.txt', row.names = 1)
vltava.herbs.spnames <- read.delim ('vltava-herbs-spnames.txt', row.names = 1)
vltava.env <- read.delim ('vltava-env.txt', row.names = 1)
vltava.group <- read.delim ('vltava-group.txt')
#vltava.transect <- read.delim ('vltava-transect.txt', row.names = 1)
vltava.ell <- read.delim ('vltava-ell.txt', row.names = 1)
vltava.spnames <- read.delim ('vltava-spnames.txt', row.names = 1)
vltava.all.spe <- read.delim ('vltava-all-spe.txt', row.names = 1, check.names = F)
vltava.all.spnames <- read.delim ('vltava-all-spnames.txt', row.names = 1)
#GROUP <- cutree (hclust (dist (log1p (vltava.spe)), 'ward'), k = 4)
#write.table (file = 'group.txt', GROUP, sep = '\t')
vltava <- list (spe = vltava.spe, ell = vltava.ell, env = vltava.env, group = vltava.group, spnames = vltava.spnames, herbs = list (spe = vltava.herbs.spe, ell = vltava.herbs.ell, traits = vltava.herbs.traits, spnames = vltava.herbs.spnames), all = list (spe = vltava.all.spe, spnames = vltava.all.spnames))
setwd ('c:\\Users\\Zeleny\\Dropbox\\experimenty\\R libraries\\weimea\\pkg\\data\\')
save (vltava, file = 'vltava.rda')
library(weimea)
data (vltava)
?vltava
library(weimea)
?vltava
library(weimea)
library(weimea)
?vltava
library(weimea)
library(weimea)
?vltava
library(weimea)
library(weimea)
library(weimea)
link.LR
link.LQ
test.LR (M = wm (vltava$spe, vltava$ell), vltava$env, alpha = 0.05)
source('C:/Users/Zeleny/Dropbox/experimenty/R libraries/weimea/preparation of vltava data for weimea.R', echo=TRUE)
library(weimea)
library (weimea)
?randomize.wm
mopet
library (ade4)
fourthcorner
?fourthcorner
data (vltava)
vltava$env
class (vltava$env)
as.matrix(vltava$env)
class (as.matrix(vltava$env))
?permute
as.matrix(vltava$env)
sample (as.matrix(vltava$env))
mat <- as.matrix(vltava$env)
mat[sample (1:nrow (mat)),]
mat[sample (1:nrow (mat)),]
mat[sample (1:nrow (mat)),]
mat[sample (1:nrow (mat)),]
nrow (vltava$env)
library(weimea)
mopet1
?mopet1
library(weimea)
library (vegan)
lett <-  read.delim ('http://www.davidzeleny.net/anadat-r/lib/exe/fetch.php?media=data:letters.txt', row.names = 1)
PCA <- rda (lett)
ordiplot (PCA, type = 't', display = 'si', scaling = 1)
evplot (PCA$CA$eig)
source ('www.davidzeleny.net/anadat-r/doku.php/en:numecolr:evplot?do=export_code&codeblock=0')
source ('http://www.davidzeleny.net/anadat-r/doku.php/en:numecolr:evplot?do=export_code&codeblock=0')
source ('www.davidzeleny.net/anadat-r/doku.php/en:numecolr:evplot?do=export_code&codeblock=0')
evplot
source ('http://www.davidzeleny.net/anadat-r/doku.php/en:numecolr:evplot?do=export_code&codeblock=0')
evplot (PCA$CA$eig)
ordiplot (PCA, type = 't', display = 'si', scaling = 1, choices = 2:3)
scores (PCA)
scores (PCA, choices = 1)
scores (PCA, choices = 1, display = 'si')
scores (PCA, choices = 1, display = 'sp')
image (scores (PCA, choices = 1, display = 'sp'))
image (matrix (scores (PCA, choices = 1, display = 'sp', ncol = 5))
)
image (matrix (scores (PCA, choices = 1, display = 'sp'), ncol = 5)
)
image (matrix (scores (PCA, choices = 1, display = 'sp'), ncol = 5))
image (matrix (scores (PCA, choices = 2, display = 'sp'), ncol = 5))
image (matrix (scores (PCA, choices = 3, display = 'sp'), ncol = 5))
image (matrix (scores (PCA, choices = 4
, display = 'sp'), ncol = 5))
?image
?heat.colors
image (matrix (scores (PCA, choices = 3, display = 'sp'), ncol = 5))
image (matrix (scores (PCA, choices = 3, display = 'sp'), ncol = 5), col = cm.colors (12))
image (matrix (scores (PCA, choices = 1, display = 'sp'), ncol = 5), col = cm.colors (12))
image (matrix (scores (PCA, choices = 1, display = 'sp'), ncol = 5), col = topo.colors (12))
image (matrix (scores (PCA, choices = 1, display = 'sp'), ncol = 5), col = cm.colors (12))
image (matrix (scores (PCA, choices = 1, display = 'sp'), ncol = 5), col = terrain.colors (12))
image (matrix (scores (PCA, choices = 1, display = 'sp'), ncol = 5), col = cm.colors (12))
image (matrix (scores (PCA, choices = 3, display = 'sp'), ncol = 5), col = cm.colors (12))
image (matrix (scores (PCA, choices = 1, display = 'sp'), ncol = 5), col = cm.colors (12))
par (mfrow = c(1,3))
image (matrix (scores (PCA, choices = 1, display = 'sp'), ncol = 5), col = cm.colors (12))
image (matrix (scores (PCA, choices = 2, display = 'sp'), ncol = 5), col = cm.colors (12))
image (matrix (scores (PCA, choices = 3, display = 'sp'), ncol = 5), col = cm.colors (12))
windows ()
par (mfrow = c(1,3))
image (matrix (scores (PCA, choices = 1, display = 'sp'), ncol = 5), col = cm.colors (12))
image (matrix (scores (PCA, choices = 2, display = 'sp'), ncol = 5), col = cm.colors (12))
image (matrix (scores (PCA, choices = 3, display = 'sp'), ncol = 5), col = cm.colors (12))
par (mfrow = c(1,3))
image (matrix (scores (PCA, choices = 1, display = 'sp'), ncol = 5), col = cm.colors (12))
image (matrix (scores (PCA, choices = 2, display = 'sp'), ncol = 5), col = cm.colors (12))
image (t(matrix (scores (PCA, choices = 3, display = 'sp'), ncol = 5)), col = cm.colors (12))
image (t(matrix (scores (PCA, choices = 3, display = 'sp'), ncol = 5)), col = cm.colors (12))
image ((matrix (scores (PCA, choices = 3, display = 'sp'), ncol = 5)), col = cm.colors (12))
matrix (1:25)
matrix (1:25, ncol = 5)
?image
filled.contour
?filled.contour
image (matrix (1:25, ncol = 5))
image (matrix (rev (1:25), ncol = 5))
image (t(matrix (rev (1:25), ncol = 5)))
image ((matrix (rev (1:25), ncol = 5, byrow = T)))
image ((matrix (rev (1:25), ncol = 5, byrow = F)))
image ((matrix (rev (1:25), ncol = 5)[,5:1]))
image ((matrix (rev (1:25), ncol = 5)[5:1,]))
par (mfrow = c(1,3))
image (matrix (scores (PCA, choices = 1, display = 'sp'), ncol = 5), col = cm.colors (12))
image (matrix (scores (PCA, choices = 2, display = 'sp'), ncol = 5), col = cm.colors (12))
image (matrix (scores (PCA, choices = 3, display = 'sp'), ncol = 5), col = cm.colors (12))
scores.1 <- scores (PCA, choices = 1, display = 'sp')
scores.2 <- scores (PCA, choices = 2, display = 'sp')
scores.3 <- scores (PCA, choices = 3, display = 'sp')
image (matrix (rev (scores.1), ncol = 5)[5:1,], col = cm.colors (12))
image (matrix (rev (scores.1), ncol = 5)[5:1,], col = cm.colors (12), xlab = '')
image (matrix (rev (scores.1), ncol = 5)[5:1,], col = cm.colors (12), xaxs = NA)
image (matrix (rev (scores.1), ncol = 5)[5:1,], col = cm.colors (12), xaxs = 'NA''')
image (matrix (rev (scores.1), ncol = 5)[5:1,], col = cm.colors (12), xaxs = '')
image (matrix (rev (scores.1), ncol = 5)[5:1,], col = cm.colors (12), xaxs = 'n')
par (mfrow = c(1,3))
image (matrix (rev (scores.1), ncol = 5)[5:1,], col = cm.colors (12))
image (matrix (rev (scores.2), ncol = 5)[5:1,], col = cm.colors (12))
image (matrix (rev (scores.3), ncol = 5)[5:1,], col = cm.colors (12))
windows ()
par (mfrow = c(1,3))
image (matrix (rev (scores.1), ncol = 5)[5:1,], col = cm.colors (12))
image (matrix (rev (scores.2), ncol = 5)[5:1,], col = cm.colors (12))
image (matrix (rev (scores.3), ncol = 5)[5:1,], col = cm.colors (12))
?windows
windows (height = 5, width = 15)
par (mfrow = c(1,3))
image (matrix (rev (scores.1), ncol = 5)[5:1,], col = cm.colors (12))
image (matrix (rev (scores.2), ncol = 5)[5:1,], col = cm.colors (12))
image (matrix (rev (scores.3), ncol = 5)[5:1,], col = cm.colors (12))
image (matrix (rev (scores.1), ncol = 5)[5:1,], col = cm.colors (12), main = 'PCA 1')
scores.1 <- scores (PCA, choices = 1, display = 'sp')
scores.2 <- scores (PCA, choices = 2, display = 'sp')
scores.3 <- scores (PCA, choices = 3, display = 'sp')
windows (height = 5, width = 15)
par (mfrow = c(1,3))
image (matrix (rev (scores.1), ncol = 5)[5:1,], col = cm.colors (12), main = 'PCA 1')
image (matrix (rev (scores.2), ncol = 5)[5:1,], col = cm.colors (12), main = 'PCA 2')
image (matrix (rev (scores.3), ncol = 5)[5:1,], col = cm.colors (12), main = 'PCA 3')
library (weimea)
?mopet
test.LR
?test.LR
test.LR.0
getAnywhere (test.LR.0)
library (weimea)
vltava$env$COVERE32
vltava$ell
ell <- wm (vltava$spe, vltava$ell)
test.LR (M = ell, env = vltava$env$COVERE32)
test.LR (M = ell[,5], env = vltava$env$COVERE32)
test.LR (M = ell[,5], env = vltava$env$COVERE32, type = 'moran')
resid.cov <- lm (as.vector (ell[,5]) ~ vktava$env$COVERE32)
resid.cov <- lm (as.vector (ell[,5]) ~ vltava$env$COVERE32)
resid.cov
resid.cov <- resid (lm (as.vector (ell[,5]) ~ vltava$env$COVERE32))
resid.cov
test.LR (M = ell[,5], env = resid.cov, type = 'moran')
test.LR (M = ell[,5], env = resid.cov)
test.LR (M = ell[,5], env = vltava$env$COVERE32, type = 'moran')
simul.LRQ
simul.RLQ
?simul.RLQ
simul.RLQ ()
sim <- simul.RLQ ()
sim <- simul.RLQ (add.noise = F)
str (sim)
sim <- simul.RLQ (add.noise = T)
wm.dray <- wm (sim$sitspe, sim$speatt)
mopet (wm.dray, sim$env)
test.LR (M = wm.dray, env = sim$env)
resid.dray <- resid (lm (wm.dray ~ sim$env))
resid.dray <- resid (lm (wm.dray ~ as.matrix (sim$env))()
resid.dray <- resid (lm (wm.dray ~ as.matrix (sim$env)))
resid.dray <- resid (lm (wm.dray ~ as.matrix (sim$env)))
resid.dray
resid.dray <- resid (lm (wm.dray ~ as.vector (sim$env)))
as.vector (sim$env)
resid.dray <- resid (lm (wm.dray ~ sim$env[,1]))
resid.dray
sim$env[,1]
resid.dray <- resid (lm (as.matrix (wm.dray) ~ sim$env[,1]))
resid.dray
resid.dray <- resid (lm (as.matrix (wm.dray) ~ sim$env[,1]))
test.LR (M = wm.dray, env = resid.dray)
test.LR (M = wm.dray, env = sim$env)
test.LR (M = wm.dray, env = resid.dray, type = 'moran')
test.LR (M = wm.dray, env = sim$env, type = 'moran')
proc.time ()
proc.time ()
library (vegan)
specpool
?specpool
?coinertia
??coinertia
citation ('ade4')
library (weimea)
version (weimea)
versions (weimea)
citaion (weimea)
citation (weimea)
citations (weimea)
citation ('weimea')
sample.comm.2
simul.comm.2
library(weimea)
simul.comm.2
install.packages ('ape')
library(weimea)
data (vltava)
vltava$herbs$spe
twinspan (vltava$herbs$spe)
library (twinspan)
twinspan (vltava$herbs$spe)
res <- twinspan (vltava$herbs$spe)
cutree (res)
cutree (res, level = 4)
res
twinspan (dune)
library (vegan)
data (dune)
twinspan (dune)
cutree
hclust (dist (dune))
cutree (hclust (dist (dune)))
?cutree
danube.spe <- read.delim ('danube.spe.txt', row.names = 1)
setwd ('c:/Users/Zeleny/Dropbox/experimenty/R libraries/twinspan/build files (not to be commited to GitHub)/data')
danube.spe <- read.delim ('danube.spe.txt', row.names = 1)
danube.env <- read.delim ('danube.env.txt', row.names = 1)
danube.ell <- read.delim ('danube.ell.txt', row.names = 1)
danube <- list (spe = danube.spe, env = danube.env, ell = danube.ell)
setwd ('c:\\Users\\Zeleny\\Dropbox\\experimenty\\R libraries\\twinspan\\data\\')
setwd ('c:\\Users\\Zeleny\\Dropbox\\experimenty\\R libraries\\twinspan\\data\\')
setwd ('c:\\Users\\Zeleny\\Dropbox\\experimenty\\R libraries\\twinspan\\data\\')
save (danube, file = 'danube.rda')
library(weimea)
?mopet1
as.matrix
?as.matrix
as.matrix.wm
?as.matrix.wm
?randomize
?print.default
library (vegan)
print.decorana
getAnywhere ('print.decorana')
range
?simul.comm2
?simul.comm.2
library(weimea)
?simul.comm.2
library(weimea)
library(weimea)
?randomize
vega::RsquareAdj
vegan::RsquareAdj
?capscale
anova.capscale
vega::anova.capscale
vegan::anova.capscale
?decorana
?mopet
library(weimea)
library(weimea)
data (vltava)
mean.eiv <- wm (vltava$spe, vltava$ell)
mopet (mean.eiv, vltava$env$pH, perm = 49, test = 'both')
mopet (mean.eiv, vltava$env$pH, perm = 49, test = 'stand', method = 'cor', cor.coef = 'spearm')
summary (mopet (mean.eiv, vltava$group, perm = 49, method = 'krusk'))
data (vltava)
mean.eiv <- wm (vltava$spe, vltava$ell)
mopet (mean.eiv, vltava$env$pH, perm = 49, test = 'all')
data (vltava)
mean.eiv <- wm (vltava$spe, vltava$ell)
mopet (mean.eiv, vltava$env$pH, perm = 49, test = 'all')
mopet (mean.eiv, vltava$env$pH, perm = 49, test = 'stand', method = 'cor', cor.coef = 'spearm')
summary (mopet (mean.eiv, vltava$group, perm = 49, method = 'krusk'))
warnings ()
mopet (mean.eiv, vltava$env$pH, perm = 49, test = 'all')
mopet (mean.eiv, vltava$env$pH, perm = 49, test = 'seq', method = 'slope')
library(weimea)
mopet (mean.eiv, vltava$env$pH, perm = 49, test = 'seq', method = 'slope')
mopet (mean.eiv, vltava$env$pH, perm = 49, test = 'seq', method = 'lm')
mopet (mean.eiv, vltava$env$pH, perm = 499, test = 'seq', method = 'slope')
mopet (mean.eiv, vltava$env$pH, perm = 499, test = 'seq', method = 'lm')
mo <- mopet (mean.eiv, vltava$env$pH, perm = 49, test = 'seq', method = 'lm')
mo
summary (mo)
mo <- mopet (mean.eiv, vltava$env$pH, perm = 49, test = NULL, method = 'lm')
mo
TEST <- c('standard', 'modified', 'sequential', 'all')
TEST
match.arg ('mod', TEST)
?match.arg
pmatch ('mod', TEST)
match.arg
pmatch (c('mod', 'all'), TEST)
match.arg (c('mod', 'all'), TEST)
match.arg (c('mod', 'all'), TEST, several.ok = T)
match.arg (NULL, TEST, several.ok = T)
TEST
match.arg (NA, TEST, several.ok = T)
match.arg (NULL, c('none', TEST), several.ok = T)
library(weimea)
mo <- mopet (mean.eiv, vltava$env$pH, perm = 49, test = NULL, method = 'lm')
mo
mo <- mopet (mean.eiv, vltava$env$pH, perm = 49, test = 'modif', method = 'lm')
mo
mopet (mean.eiv, vltava$env$pH, perm = 49, test = c('stand', 'modif'), method = 'lm')
mopet (mean.eiv, vltava$env$pH, perm = 49, test = c('all', 'modif'), method = 'lm')
mopet (mean.eiv, vltava$env$pH, perm = 49, test = c('all'), method = 'lm')
mopet (mean.eiv, vltava$env$pH, perm = 49, test = c('seq'), method = 'lm')
test %in% 'modified'
library(weimea)
mopet (mean.eiv, vltava$env$pH, perm = 49, test = c('seq'), method = 'lm')
mopet (mean.eiv, vltava$env$pH, perm = 49, test = c('all'), method = 'lm')
mopet (mean.eiv, vltava$env$pH, perm = 49, test = c('modif'), method = 'lm')
mopet (mean.eiv, vltava$env$pH, perm = 49, test = c('stad'), method = 'lm')
mopet (mean.eiv, vltava$env$pH, perm = 49, test = c('stand'), method = 'lm')
mopet (mean.eiv, vltava$env$pH, perm = 49, test = c('stand', 'modif'), method = 'lm')
c('modif', 'seq') %in% 'modif'
'modif' %in% c('modif', 'seq')
library(weimea)
mopet (mean.eiv, vltava$env$pH, perm = 49, test = c('stand', 'modif'), method = 'lm')
mopet (mean.eiv, vltava$env$pH, perm = 49, test = c('stand', 'modif'), method = 'lm')
library(weimea)
mopet (mean.eiv, vltava$env$pH, perm = 49, test = c('stand', 'modif'), method = 'lm')
citation ('weimea')
?weimea
?weimea-package
help.search ('weimea-package')
library(weimea)
