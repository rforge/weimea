{
CWM.r <- wm (vltava$herbs$spe, sample (SLA))
lm1 <- summary (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
plot (CWM.r ~ vltava$env$COVERE32, xlab = 'cover of trees and shrubs [%]', ylab = 'CWM of randomized SLA')
abline (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
}
par (mfrow = c(2,3))
set.seed (123)
for (i in seq (1, 6))
{
CWM.r <- wm (vltava$herbs$spe, sample (SLA))
lm1 <- summary (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
plot (CWM.r ~ vltava$env$COVERE32, xlab = 'cover of trees and shrubs [%]', ylab = 'CWM of randomized SLA')
abline (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
print (lm1)
}
par (mfrow = c(2,3))
set.seed (123)
for (i in seq (1, 6))
{
CWM.r <- wm (vltava$herbs$spe, sample (SLA))
lm1 <- summary (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
plot (CWM.r ~ vltava$env$COVERE32, xlab = 'cover of trees and shrubs [%]', ylab = 'CWM of randomized SLA')
if (i %in% c(2,4,5,6)) abline (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
print (lm1)
}
library (vegan)
data (BCI)  # example using Baro Colorado data
BCI.log <- log1p (BCI)  # first, log transform species data, which contains numbers of individuals
bc.dist <- vegdist (BCI.log, method = 'bray')
bc.dist
print (bc.dist, diag = TRUE)
#install.packages ('cluster') # install if necessary
library (cluster)
clust <- agnes (bc.dist, method = 'ward') # calculate Ward's algorithm
plot (clust, which = 2)
rect.hclust (clust, 5, border = 1:5)
plot (clust, which = 2)
groups <- cutree (clust, k = 5)
groups
# First, NMDS with Bray-Curtis distances
NMDS <- metaMDS (vegdist (BCI.log))  # note that I could use also "NMDS <- metaMDS (bc.dist)" here
par (mfrow = c(1,2)) # I want to plot both plots into one figure, with two panels in one row
ordiplot (NMDS, type = 'n')
points (NMDS, pch = groups, col = groups)
legend ('topright', pch = 1:4, col = 1:4, legend = 1:4, bty = 'n')
# Second, DCA ordination (implicitly using chi-square distance)
DCA <- decorana (BCI.log)
ordiplot (DCA, type = 'n', display = 'si')
points (DCA, pch = groups, col = groups)
legend ('topright', pch = 1:4, col = 1:4, legend = 1:4, bty = 'n')
source('~/.active-rstudio-document')
windows ()
png ('BCI_clust_NMDS_DCA.png', width = 700, height = 350, units = 'px')
NMDS <- metaMDS (vegdist (BCI.log))  # note that I could use also "NMDS <- metaMDS (bc.dist)" here
par (mfrow = c(1,2)) # I want to plot both plots into one figure, with two panels in one row
ordiplot (NMDS, type = 'n')
points (NMDS, pch = groups, col = groups)
legend ('topright', pch = 1:5, col = 1:5, legend = 1:5, bty = 'n')
# Second, DCA ordination (implicitly using chi-square distance)
DCA <- decorana (BCI.log)
ordiplot (DCA, type = 'n', display = 'si')
points (DCA, pch = groups, col = groups)
legend ('topright', pch = 1:5, col = 1:5, legend = 1:5, bty = 'n')
dev.off ()
png ('BCI_clust_NMDS_DCA.png', width = 1000, height = 500, units = 'px')
NMDS <- metaMDS (vegdist (BCI.log))  # note that I could use also "NMDS <- metaMDS (bc.dist)" here
par (mfrow = c(1,2)) # I want to plot both plots into one figure, with two panels in one row
ordiplot (NMDS, type = 'n')
points (NMDS, pch = groups, col = groups)
legend ('topright', pch = 1:5, col = 1:5, legend = 1:5, bty = 'n')
# Second, DCA ordination (implicitly using chi-square distance)
DCA <- decorana (BCI.log)
ordiplot (DCA, type = 'n', display = 'si')
points (DCA, pch = groups, col = groups)
legend ('topright', pch = 1:5, col = 1:5, legend = 1:5, bty = 'n')
dev.off ()
?png
png ('BCI_clust_NMDS_DCA.png', width = 1000, height = 500, units = 'px', pointsize = 24)
NMDS <- metaMDS (vegdist (BCI.log))  # note that I could use also "NMDS <- metaMDS (bc.dist)" here
par (mfrow = c(1,2)) # I want to plot both plots into one figure, with two panels in one row
ordiplot (NMDS, type = 'n')
points (NMDS, pch = groups, col = groups)
legend ('topright', pch = 1:5, col = 1:5, legend = 1:5, bty = 'n')
# Second, DCA ordination (implicitly using chi-square distance)
DCA <- decorana (BCI.log)
ordiplot (DCA, type = 'n', display = 'si')
points (DCA, pch = groups, col = groups)
legend ('topright', pch = 1:5, col = 1:5, legend = 1:5, bty = 'n')
dev.off ()
png ('BCI_clust_NMDS_DCA.png', width = 1000, height = 500, units = 'px', pointsize = 16)
NMDS <- metaMDS (vegdist (BCI.log))  # note that I could use also "NMDS <- metaMDS (bc.dist)" here
par (mfrow = c(1,2)) # I want to plot both plots into one figure, with two panels in one row
ordiplot (NMDS, type = 'n')
points (NMDS, pch = groups, col = groups)
legend ('topright', pch = 1:5, col = 1:5, legend = 1:5, bty = 'n')
# Second, DCA ordination (implicitly using chi-square distance)
DCA <- decorana (BCI.log)
ordiplot (DCA, type = 'n', display = 'si')
points (DCA, pch = groups, col = groups)
legend ('topright', pch = 1:5, col = 1:5, legend = 1:5, bty = 'n')
dev.off ()
windows ()
NMDS <- metaMDS (vegdist (BCI.log))  # note that I could use also "NMDS <- metaMDS (bc.dist)" here
par (mfrow = c(1,2)) # I want to plot both plots into one figure, with two panels in one row
ordiplot (NMDS, type = 'n')
points (NMDS, pch = groups, col = groups)
legend ('topright', pch = 1:5, col = 1:5, legend = 1:5, bty = 'n')
# Second, DCA ordination (implicitly using chi-square distance)
DCA <- decorana (BCI.log)
ordiplot (DCA, type = 'n', display = 'si')
points (DCA, pch = groups, col = groups)
legend ('topright', pch = 1:5, col = 1:5, legend = 1:5, bty = 'n')
NMDS <- metaMDS (vegdist (BCI.log))  # note that I could use also "NMDS <- metaMDS (bc.dist)" here
par (mfrow = c(1,2)) # I want to plot both plots into one figure, with two panels in one row
ordiplot (NMDS, type = 'n')
points (NMDS, pch = groups, col = groups)
legend ('topright', pch = 1:5, col = 1:5, legend = 1:5, bty = 'n')
# Second, DCA ordination (implicitly using chi-square distance)
DCA <- decorana (BCI.log)
ordiplot (DCA, type = 'n', display = 'si')
points (DCA, pch = groups, col = groups)
legend ('topright', pch = 1:5, col = 1:5, legend = 1:5, bty = 'n')
clust <- agnes (sqrt (bc.dist), method = 'ward') # calculate Ward's algorithm
plot (clust, which = 2)
rect.hclust (clust, 5, border = 1:5)
plot (clust, which = 2)
groups <- cutree (clust, k = 5)
groups
BCI.env <- read.delim ('http://www.davidzeleny.net/anadat-r/lib/exe/fetch.php?media=data:bci.env.txt')
plot (UTM.NS ~ UTM.EW, data = BCI.env, pch = groups, cex = 3)  # this is the simple version, only with symbols differentiating individual groups
plot (UTM.NS ~ UTM.EW, data = BCI.env, pch = groups+20, cex = 3, bg = groups, col = 'white') # this is more "colorful" option. Note that symbols now are 21 to 25, arguments 'bg' and 'col' which
NMDS <- metaMDS (sqrt (vegdist (BCI.log)))  # note that I could use also "NMDS <- metaMDS (bc.dist)" here
par (mfrow = c(1,2)) # I want to plot both plots into one figure, with two panels in one row
ordiplot (NMDS, type = 'n')
points (NMDS, pch = groups, col = groups)
legend ('topright', pch = 1:5, col = 1:5, legend = 1:5, bty = 'n')
DCA <- decorana (BCI.log)
ordiplot (DCA, type = 'n', display = 'si')
points (DCA, pch = groups, col = groups)
legend ('topright', pch = 1:5, col = 1:5, legend = 1:5, bty = 'n')
# First, NMDS with Bray-Curtis distances
NMDS <- metaMDS (sqrt (vegdist (BCI.log)))  # note that I could use also "NMDS <- metaMDS (bc.dist)" here
par (mfrow = c(1,2)) # I want to plot both plots into one figure, with two panels in one row
ordiplot (NMDS, type = 'n')
points (NMDS, pch = groups, col = groups)
legend ('topright', pch = 1:5, col = 1:5, legend = 1:5)
# Second, DCA ordination (implicitly using chi-square distance)
DCA <- decorana (BCI.log)
ordiplot (DCA, type = 'n', display = 'si')
points (DCA, pch = groups, col = groups)
legend ('topright', pch = 1:5, col = 1:5, legend = 1:5,)
BCI.env <- read.delim ('http://www.davidzeleny.net/anadat-r/lib/exe/fetch.php?media=data:bci.env.txt')
plot (UTM.NS ~ UTM.EW, data = BCI.env, pch = groups, cex = 3)  # this is the simple version, only with symbols differentiating individual groups
plot (UTM.NS ~ UTM.EW, data = BCI.env, pch = groups+20, cex = 3, bg = groups, col = 'white') # this is more "colorful" option. Note that symbols now are 21 to 25, arguments 'bg' and 'col' which
clust <- agnes (sqrt (bc.dist), method = 'ward.D2') # calculate Ward's algorithm
plot (clust, which = 2)
rect.hclust (clust, 5, border = 1:5)
plot (clust, which = 2)
groups <- cutree (clust, k = 5)
groups
BCI.env <- read.delim ('http://www.davidzeleny.net/anadat-r/lib/exe/fetch.php?media=data:bci.env.txt')
plot (UTM.NS ~ UTM.EW, data = BCI.env, pch = groups, cex = 3)  # this is the simple version, only with symbols differentiating individual groups
plot (UTM.NS ~ UTM.EW, data = BCI.env, pch = groups+20, cex = 3, bg = groups, col = 'white') # this is more "colorful" option. Note that symbols now are 21 to 25, arguments 'bg' and 'col' which
clust <- agnes (sqrt (bc.dist), method = 'ward.D2') # calculate Ward's algorithm
plot (clust, which = 2)
rect.hclust (clust, 5, border = 1:5)
plot (clust, which = 2)
groups <- cutree (clust, k = 5)
groups
BCI.env <- read.delim ('http://www.davidzeleny.net/anadat-r/lib/exe/fetch.php?media=data:bci.env.txt')
plot (UTM.NS ~ UTM.EW, data = BCI.env, pch = groups, cex = 3)  # this is the simple version, only with symbols differentiating individual groups
plot (UTM.NS ~ UTM.EW, data = BCI.env, pch = groups+20, cex = 3, bg = groups, col = 'white') # this is more "colorful" option. Note that symbols now are 21 to 25, arguments 'bg' and 'col' which
NMDS <- metaMDS (sqrt (vegdist (BCI.log)))  # note that I could use also "NMDS <- metaMDS (bc.dist)" here
par (mfrow = c(1,2)) # I want to plot both plots into one figure, with two panels in one row
ordiplot (NMDS, type = 'n')
points (NMDS, pch = groups, col = groups)
legend ('topright', pch = 1:5, col = 1:5, legend = 1:5)
# Second, DCA ordination (implicitly using chi-square distance)
DCA <- decorana (BCI.log)
ordiplot (DCA, type = 'n', display = 'si')
points (DCA, pch = groups, col = groups)
legend ('topright', pch = 1:5, col = 1:5, legend = 1:5,)
clust <- agnes (sqrt (bc.dist), method = 'ward.D2') # calculate Ward's algorithm
# on square-rooted Bray-Curtis distances
plot (clust, which = 2)
rect.hclust (clust, 5, border = 1:5)
plot (clust, which = 2)
groups <- cutree (clust, k = 5)
groups
BCI.env <- read.delim ('http://www.davidzeleny.net/anadat-r/lib/exe/fetch.php?media=data:bci.env.txt')
plot (UTM.NS ~ UTM.EW, data = BCI.env, pch = groups, cex = 3)  # this is the simple version, only with symbols differentiating individual groups
plot (UTM.NS ~ UTM.EW, data = BCI.env, pch = groups+20, cex = 3, bg = groups, col = 'white') # this is more "colorful" option. Note that symbols now are 21 to 25, arguments 'bg' and 'col' which
windows ()
plot (UTM.NS ~ UTM.EW, data = BCI.env, pch = groups+20, cex = 3, bg = groups, col = 'white') # this is more "colorful" option. Note that symbols now are 21 to 25, arguments 'bg' and 'col' which
plot (UTM.NS ~ UTM.EW, data = BCI.env, pch = groups+20, cex = 3, bg = groups, col = 'white') # this is more "colorful" option. Note that symbols now are 21 to 25, arguments 'bg' and 'col' which
plot (UTM.NS ~ UTM.EW, data = BCI.env, pch = groups+20, cex = 3, bg = groups, col = 'white') # this is more "colorful" option. Note that symbols now are 21 to 25, arguments 'bg' and 'col' which
NMDS <- metaMDS (sqrt (vegdist (BCI.log)))  # note that I could use also "NMDS <- metaMDS (sqrt (bc.dist))" here
par (mfrow = c(1,2)) # I want to plot both plots into one figure, with two panels in one row
ordiplot (NMDS, type = 'n')
points (NMDS, pch = groups, col = groups)
legend ('topright', pch = 1:5, col = 1:5, legend = 1:5)
# Second, DCA ordination (implicitly using chi-square distance)
DCA <- decorana (BCI.log)
ordiplot (DCA, type = 'n', display = 'si')
points (DCA, pch = groups, col = groups)
legend ('topright', pch = 1:5, col = 1:5, legend = 1:5,)
NMDS <- metaMDS (sqrt (vegdist (BCI.log)))  # note that I could use also "NMDS <- metaMDS (sqrt (bc.dist))" here
par (mfrow = c(1,2)) # I want to plot both plots into one figure, with two panels in one row
ordiplot (NMDS, type = 'n')
points (NMDS, pch = groups, col = groups)
legend ('topright', pch = 1:5, col = 1:5, legend = 1:5)
# Second, DCA ordination (implicitly using chi-square distance)
DCA <- decorana (BCI.log)
ordiplot (DCA, type = 'n', display = 'si')
points (DCA, pch = groups, col = groups)
legend ('topright', pch = 1:5, col = 1:5, legend = 1:5,)
library (cluster)
clust <- agnes (sqrt (bc.dist), method = 'ward.D2') # calculate Ward's algorithm
# on square-rooted Bray-Curtis distances
plot (clust, which = 2)
rect.hclust (clust, 5, border = 1:5)
plot (clust, which = 2)
groups <- cutree (clust, k = 5)
groups
windows ()
plot (clust, which = 2)
rect.hclust (clust, 5, border = 1:5)
library (weimea)
data (vltava)
SLA <- vltava$herbs$traits$SLA
CWM <- wm (vltava$herbs$spe, SLA)
plot (CWM ~ vltava$env$COVERE32)
abline (lm (CWM ~ vltava$env$COVERE32))
par (mfrow = c(2,3))
set.seed (123)
for (i in seq (1, 6))
{
CWM.r <- wm (vltava$herbs$spe, sample (SLA))
lm1 <- summary (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
plot (CWM.r ~ vltava$env$COVERE32, xlab = 'cover of trees and shrubs [%]', ylab = 'CWM of randomized SLA')
if (i %in% c(2,4,5,6)) abline (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
print (lm1)
}
lm1
print (lm1)
pr <- print (lm1)
pr$fstatistic
lm1$terms
lm1$coefficients
lm1$coefficients[2,4]
P.value <- lm1$coefficients[2,4]
par (mfrow = c(2,3))
set.seed (123)
for (i in seq (1, 6))
{
CWM.r <- wm (vltava$herbs$spe, sample (SLA))
lm1 <- summary (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
plot (CWM.r ~ vltava$env$COVERE32, xlab = 'cover of trees and shrubs [%]', ylab = 'CWM of randomized SLA')
P.value <- lm1$coefficients[2,4]
if (P.value < 0.05) abline (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
print (lm1)
}
par (mfrow = c(3,3))
set.seed (123)
for (i in seq (1, 9))
{
CWM.r <- wm (vltava$herbs$spe, sample (SLA))
lm1 <- summary (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
plot (CWM.r ~ vltava$env$COVERE32, xlab = 'cover of trees and shrubs [%]', ylab = 'CWM of randomized SLA')
P.value <- lm1$coefficients[2,4]
if (P.value < 0.05) abline (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
print (lm1)
}
par (mfrow = c(3,3))
set.seed (12)
for (i in seq (1, 9))
{
CWM.r <- wm (vltava$herbs$spe, sample (SLA))
lm1 <- summary (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
plot (CWM.r ~ vltava$env$COVERE32, xlab = 'cover of trees and shrubs [%]', ylab = 'CWM of randomized SLA')
P.value <- lm1$coefficients[2,4]
if (P.value < 0.05) abline (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
print (lm1)
}
par (mfrow = c(3,3))
set.seed (1)
for (i in seq (1, 9))
{
CWM.r <- wm (vltava$herbs$spe, sample (SLA))
lm1 <- summary (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
plot (CWM.r ~ vltava$env$COVERE32, xlab = 'cover of trees and shrubs [%]', ylab = 'CWM of randomized SLA')
P.value <- lm1$coefficients[2,4]
if (P.value < 0.05) abline (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
print (lm1)
}
lm1$r.squared
round (lm1$r.squared,3 )
round (lm1$r.squared,4 )
?round
legend ('topleft', legend = paste ('r2 = ', round (lm1$r.squared, 3), ', P = ', round (P.value, 3)))
par (mfrow = c(3,3))
set.seed (1)
for (i in seq (1, 9))
{
CWM.r <- wm (vltava$herbs$spe, sample (SLA))
lm1 <- summary (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
plot (CWM.r ~ vltava$env$COVERE32, xlab = 'cover of trees and shrubs [%]', ylab = 'CWM of randomized SLA')
P.value <- lm1$coefficients[2,4]
if (P.value < 0.05) abline (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
legend ('topleft', legend = paste ('r2 = ', round (lm1$r.squared, 3), ', P = ', round (P.value, 3)))
print (lm1)
}
signif <- function (x)
ifelse (x < 0.001, 'P < 0.001', ifelse (x < 0.01, 'P < 0.01', ifelse (x < 0.05, 'P < 0.05', paste ('P = ', x))))
signif (0.01)
signif (0.001)
signif (0.0001)
signif (0.01)
signif (0.1)
formatC (x)
formatC (0.001, digits = 3, format = 'f' )
formatC (0.00134, digits = 3, format = 'f' )
legend ('topleft', legend = paste ('r2 = ', round (lm1$r.squared, 3), ', P = ', formatC (P.value, digits = 3, format = 'f' )), bty = 'n')
par (mfrow = c(3,3))
set.seed (1)
for (i in seq (1, 9))
{
CWM.r <- wm (vltava$herbs$spe, sample (SLA))
lm1 <- summary (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
plot (CWM.r ~ vltava$env$COVERE32, xlab = 'cover of trees and shrubs [%]', ylab = 'CWM of randomized SLA')
P.value <- lm1$coefficients[2,4]
if (P.value < 0.05) abline (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
legend ('topleft', legend = paste ('r2 = ', round (lm1$r.squared, 3), ', P = ', formatC (P.value, digits = 3, format = 'f' )), bty = 'n')
print (lm1)
}
signif <- function (x)
ifelse (x < 0.001, 'P < 0.001', ifelse (x < 0.01, 'P < 0.01', ifelse (x < 0.05, 'P < 0.05', paste ('P = ', formatC (x, digits = 3, format = 'f' )))))
legend ('topleft', legend = paste ('r2 = ', round (lm1$r.squared, 3), ', ', signif (P.value)), bty = 'n')
par (mfrow = c(3,3))
set.seed (1)
for (i in seq (1, 9))
{
CWM.r <- wm (vltava$herbs$spe, sample (SLA))
lm1 <- summary (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
plot (CWM.r ~ vltava$env$COVERE32, xlab = 'cover of trees and shrubs [%]', ylab = 'CWM of randomized SLA')
P.value <- lm1$coefficients[2,4]
if (P.value < 0.05) abline (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
legend ('topleft', legend = paste ('r2 = ', round (lm1$r.squared, 3), ', ', signif (P.value)), bty = 'n')
print (lm1)
}
par (mfrow = c(2,3))
set.seed (123)
for (i in seq (1, 6))
{
CWM.r <- wm (vltava$herbs$spe, sample (SLA))
lm1 <- summary (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
plot (CWM.r ~ vltava$env$COVERE32, xlab = 'cover of trees and shrubs [%]', ylab = 'CWM of randomized SLA')
P.value <- lm1$coefficients[2,4]
if (P.value < 0.05) abline (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
legend ('topleft', legend = paste ('r2 = ', round (lm1$r.squared, 3), ', ', signif (P.value)), bty = 'n')
print (lm1)
}
par (mfrow = c(2,3))
set.seed (123)
for (i in seq (1, 6))
{
CWM.r <- wm (vltava$herbs$spe, sample (SLA))
lm1 <- summary (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
plot (CWM.r ~ vltava$env$COVERE32, xlab = 'cover of trees and shrubs [%]', ylab = 'CWM of randomized SLA')
P.value <- lm1$coefficients[2,4]
if (P.value < 0.05) abline (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
legend ('topleft', legend = paste ('r2 = ', round (lm1$r.squared, 3), ', ', signif (P.value)), bty = 'n')
print (lm1)
}
par (mfrow = c(2,3))
set.seed (123)
for (i in seq (1, 6))
{
CWM.r <- wm (vltava$herbs$spe, sample (SLA))
lm1 <- summary (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
plot (CWM.r ~ vltava$env$COVERE32, xlab = 'cover of trees and shrubs [%]', ylab = 'CWM of randomized SLA')
P.value <- lm1$coefficients[2,4]
if (P.value < 0.05) abline (lm (as.vector (CWM.r) ~ vltava$env$COVERE32))
legend ('topleft', legend = paste ('r2 = ', round (lm1$r.squared, 3), ', ', signif (P.value)), bty = 'n')
print (lm1)
}
load (url ('http://www.davidzeleny.net/anadat-r/lib/exe/fetch.php/data:vltava.r'))
# fourthcorner analysis
spe <- vltava$herbs$spe
env <- vltava$env[, c(1:4, 11, 12, 17)]
traits <- vltava$herbs$traits
library (ade4)
fourthcorner (tabR = env, tabL = spe, tabQ = traits)
traits.na <- na.omit (traits)
traits.na$plant_height <- log10 (traits.na$plant_height)
traits.na$seed_weight <- log10 (traits.na$seed_weight)
select.species <- rownames (traits) %in% rownames (traits.na)
spe.na <- spe[,select.species]
fc <- fourthcorner (tabR = env, tabL = spe[,select.species], tabQ = traits[select.species,], p.adjust.method.G = 'none', p.adjust.method.D = 'none')
plot (fc, alpha = 0.1, stat = "D2")
dudiL <- dudi.coa (spe.na, scannf = FALSE)
dudiR <- dudi.pca (env, scannf = FALSE, row.w = dudiL$lw)
dudiQ <- dudi.pca (traits.na, scannf = FALSE, row.w = dudiL$cw)
vlt.rlq <- rlq (dudiR = dudiR, dudiL = dudiL, dudiQ = dudiQ, scannf = FALSE)
plot (vlt.rlq)
vltava$spe
vltava$herbs$traits
setwd ('c:\\Users\\Zeleny\\Dropbox\\experimenty\\R libraries\\weimea\\data\\')
vltava.spe <- read.delim ('vltava-spe.txt', row.names = 1, check.names = F)
setwd ('c:\\Users\\Zeleny\\Dropbox\\experimenty\\R libraries\\weimea\\data\\')
vltava.spe <- read.delim ('vltava-spe.txt', row.names = 1, check.names = F)
dir ()
setwd ('c:\\Users\\Zeleny\\Dropbox\\experimenty\\R libraries\\weimea build files\\data\\')
vltava.spe <- read.delim ('vltava-spe.txt', row.names = 1, check.names = F)
vltava.herbs.spe <- read.delim ('vltava-herbs-spe.txt', row.names = 1, check.names = F)
vltava.herbs.ell <- read.delim ('vltava-herbs-ell.txt', row.names = 1)
vltava.herbs.traits <- read.delim ('vltava-herbs-traits.txt', row.names = 1)
vltava.herbs.spnames <- read.delim ('vltava-herbs-spnames.txt', row.names = 1)
vltava.env <- read.delim ('vltava-env.txt', row.names = 1)
vltava.ell <- read.delim ('vltava-ell.txt', row.names = 1)
vltava.spnames <- read.delim ('vltava-spnames.txt', row.names = 1)
vltava.all.spe <- read.delim ('vltava-all-spe.txt', row.names = 1, check.names = F)
vltava.all.spnames <- read.delim ('vltava-all-spnames.txt', row.names = 1)
vltava <- list (spe = vltava.spe, ell = vltava.ell, env = vltava.env, spnames = vltava.spnames, herbs = list (spe = vltava.herbs.spe, ell = vltava.herbs.ell, traits = vltava.herbs.traits, spnames = vltava.herbs.spnames), all = list (spe = vltava.all.spe, spnames = vltava.all.spnames))
setwd ('c:\\Users\\Zeleny\\Dropbox\\experimenty\\R libraries\\weimea\\pkg\\data\\')
setwd ('c:\\Users\\Zeleny\\Dropbox\\experimenty\\R libraries\\weimea\\data\\')
save (vltava, file = 'vltava.rda')
load (vltava, file = 'vltava.rda')
?load
load (file = 'vltava.rda')
vltava
str (vltava)
names (vltava)
load (url ('http://www.davidzeleny.net/anadat-r/lib/exe/fetch.php/data:vltava.r'))
names (vltava)
load (url ('http://www.davidzeleny.net/anadat-r/lib/exe/fetch.php/data:vltava.r'))
# fourthcorner analysis
spe <- vltava$herbs$spe
env <- vltava$env[, c(1:4, 11, 12, 17)]
traits <- vltava$herbs$traits
library (ade4)
traits.na <- na.omit (traits)
traits.na$plant_height <- log10 (traits.na$plant_height)
traits.na$seed_weight <- log10 (traits.na$seed_weight)
select.species <- rownames (traits) %in% rownames (traits.na)
spe.na <- spe[,select.species]
fc <- fourthcorner (tabR = env, tabL = spe[,select.species], tabQ = traits[select.species,], p.adjust.method.G = 'none', p.adjust.method.D = 'none')
plot (fc, alpha = 0.1, stat = "D2")
traits <- vltava$herbs$traits
traits.na <- na.omit (traits)
traits.na
traits.na$plant_height <- log10 (traits.na$plant_height)
traits.na$plant_height
traits.na
traits.na$plant.height
traits.na$plant.height <- log10 (traits.na$plant.height)
traits.na$seed.weight <- log10 (traits.na$seed.weight)
select.species <- rownames (traits) %in% rownames (traits.na)
spe.na <- spe[,select.species]
fc <- fourthcorner (tabR = env, tabL = spe[,select.species], tabQ = traits[select.species,], p.adjust.method.G = 'none', p.adjust.method.D = 'none')
plot (fc, alpha = 0.1, stat = "D2")
cwm <- wm (sitspe = spe, speatt = traits)
modif.cwm <- test.MR (cwm, env = env, test = 'modif')
modif.cwm.df <- do.call (rbind.data.frame, modif.cwm$out)
p.adjust (modif.cwm.df$P.mod, method = 'fdr')
dudiL <- dudi.coa (spe.na, scannf = FALSE)
dudiR <- dudi.pca (env, scannf = FALSE, row.w = dudiL$lw)
dudiQ <- dudi.pca (traits.na, scannf = FALSE, row.w = dudiL$cw)
vlt.rlq <- rlq (dudiR = dudiR, dudiL = dudiL, dudiQ = dudiQ, scannf = FALSE)
plot (vlt.rlq)
spe <- log1p (vltava$herbs$spe)
env <- vltava$env[, c(1:4, 11, 12, 17)]
traits <- vltava$herbs$traits
library (ade4)
traits.na <- na.omit (traits)
traits.na$plant.height <- log10 (traits.na$plant.height)
traits.na$seed.weight <- log10 (traits.na$seed.weight)
select.species <- rownames (traits) %in% rownames (traits.na)
spe.na <- spe[,select.species]
fc <- fourthcorner (tabR = env, tabL = spe[,select.species], tabQ = traits[select.species,], p.adjust.method.G = 'none', p.adjust.method.D = 'none')
plot (fc, alpha = 0.1, stat = "D2")
cwm <- wm (sitspe = spe, speatt = traits)
modif.cwm <- test.MR (cwm, env = env, test = 'modif')
modif.cwm
vltava$env
env <- vltava$env[, c(1:4, 11:13)]
traits <- vltava$herbs$traits
traits.na <- na.omit (traits)
traits.na$plant.height <- log10 (traits.na$plant.height)
traits.na$seed.weight <- log10 (traits.na$seed.weight)
select.species <- rownames (traits) %in% rownames (traits.na)
spe.na <- spe[,select.species]
fc <- fourthcorner (tabR = env, tabL = spe[,select.species], tabQ = traits[select.species,], p.adjust.method.G = 'none', p.adjust.method.D = 'none')
plot (fc, alpha = 0.1, stat = "D2")
cwm <- wm (sitspe = spe, speatt = traits)
modif.cwm <- test.MR (cwm, env = env, test = 'modif')
modif.cwm.df <- do.call (rbind.data.frame, modif.cwm$out)
p.adjust (modif.cwm.df$P.mod, method = 'fdr')
modif.cwm.df
modif.cwm
print (modif.cwm)
pr <- print (modif.cwm)
pr
str (pr)
?test.MR
?test.MR
?wm
?vegan
?wm
library (weimea)
coef (modif.cwm)
